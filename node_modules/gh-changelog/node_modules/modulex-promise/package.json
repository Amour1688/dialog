{
  "name": "modulex-promise",
  "version": "1.1.3",
  "author": {
    "name": "yiminghe",
    "email": "yiminghe@gmail.com"
  },
  "engines": {
    "node": "~0.11"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "http://github.com/kissyteam/promise.git"
  },
  "testling": {
    "server": "server.js",
    "html": "tests/runner.html",
    "browsers": [
      "ie/6..latest",
      "chrome/latest",
      "firefox/latest",
      "safari/latest",
      "iphone/6..lastest",
      "ipad/6..latest",
      "android-browser/latest"
    ]
  },
  "devDependencies": {
    "async": "^0.9.0",
    "expect.js": "^0.3.1",
    "gulp": "^3.8.7",
    "gulp-clean": "^0.3.1",
    "gulp-filter": "^1.0.0",
    "gulp-footer": "^1.0.5",
    "gulp-header": "^1.0.5",
    "gulp-jscs": "^1.1.0",
    "gulp-jshint": "^1.8.4",
    "gulp-kclean": "~0.0.15",
    "gulp-modulex": "^1.0.0",
    "gulp-rename": "^1.2.0",
    "gulp-replace": "^0.4.0",
    "gulp-uglify": "^0.3.1",
    "gulp-util": "^3.0.0",
    "jshint": "^2.5.5",
    "jshint-stylish": "^0.4.0",
    "kison": "^0.3.5",
    "koa": "^0.11.0",
    "koa-body": "^0.2.0",
    "koa-mount": "^1.3.0",
    "koa-serve-index": "^1.0.1",
    "koa-static": "^1.4.7",
    "mocha": "^1.21.4",
    "node-jscover": "^0.6.8",
    "node-jscover-coveralls": "^1.0.10",
    "node-jscover-handler": "^1.0.3",
    "gulp-wrapper": "^0.1.5",
    "precommit-hook": "^1.0.7"
  },
  "precommit": [
    "lint"
  ],
  "scripts": {
    "start": "node --harmony server",
    "publish": "gulp tag",
    "test": "node --harmony ./node_modules/mocha/bin/_mocha -R list tests/node/specs",
    "lint": "gulp lint",
    "browser-test": "mocha-phantomjs http://localhost:8015/tests/browser/runner.html",
    "browser-test-build": "mocha-phantomjs http://localhost:8015/tests/browser/runner.html?build",
    "browser-test-cover": "mocha-phantomjs -R node_modules/node-jscover/lib/reporters/mocha/console http://localhost:8015/tests/browser/runner.html?coverage"
  },
  "readme": "# promise\r\n\r\nES6-compatible promise library. Promise/A+ implementation.\r\n\r\n[![promise](https://nodei.co/npm/modulex-promise.png)](https://npmjs.org/package/modulex-promise)\r\n[![NPM downloads](http://img.shields.io/npm/dm/modulex-promise.svg)](https://npmjs.org/package/modulex-promise)\r\n[![Build Status](https://secure.travis-ci.org/kissyteam/promise.png?branch=master)](https://travis-ci.org/kissyteam/promise)\r\n[![Coverage Status](https://img.shields.io/coveralls/kissyteam/promise.svg)](https://coveralls.io/r/kissyteam/promise?branch=master)\r\n[![Dependency Status](https://gemnasium.com/kissyteam/promise.png)](https://gemnasium.com/kissyteam/promise)\r\n[![Bower version](https://badge.fury.io/bo/modulex-promise.svg)](http://badge.fury.io/bo/modulex-promise)\r\n[![node version](https://img.shields.io/badge/node.js-%3E=_0.10-green.svg?style=flat-square)](http://nodejs.org/download/)\r\n\r\n[![browser support](https://ci.testling.com/kissyteam/promise.png)](https://ci.testling.com/kissyteam/promise)\r\n\r\n## example\r\n\r\n### nodejs\r\n```javascript\r\nvar Promise = require('modulex-promise');\r\nreadFilePromisified('config.json')\r\n.then(function (text) { // (A)\r\n    var obj = JSON.parse(text);\r\n    console.log(JSON.stringify(obj, null, 4));\r\n})\r\n.catch(function (reason) { // (B)\r\n    // File read error or JSON SyntaxError\r\n    console.error('An error occurred', reason);\r\n});\r\n```\r\n\r\n### standalone\r\n```html\r\n<script src=\"build/promise-standalone-debug.js\"></script>\r\n<script>\r\n    (function (Promise) {\r\n        function httpGet(url) {\r\n            return new Promise(\r\n                function (resolve, reject) {\r\n                    var request = new XMLHttpRequest();\r\n                    request.onreadystatechange = function () {\r\n                        if (this.status === 200) {\r\n                            // Success\r\n                            resolve(this.response);\r\n                        } else {\r\n                            // Something went wrong (404 etc.)\r\n                            reject(new Error(this.statusText));\r\n                        }\r\n                    }\r\n                    request.onerror = function () {\r\n                        reject(new Error(\r\n                            'XMLHttpRequest Error: '+this.statusText));\r\n                    };\r\n                    request.open('GET', url);\r\n                    request.send();\r\n                });\r\n        }\r\n        httpGet('http://example.com/file.txt')\r\n        .then(\r\n            function (value) {\r\n                console.log('Contents: ' + value);\r\n            },\r\n            function (reason) {\r\n                console.error('Something went wrong', reason);\r\n            });\r\n    })(XPromise);\r\n</script>\r\n```",
  "readmeFilename": "README.md",
  "description": "ES6-compatible promise library. Promise/A+ implementation.",
  "bugs": {
    "url": "https://github.com/kissyteam/promise/issues"
  },
  "homepage": "https://github.com/kissyteam/promise",
  "_id": "modulex-promise@1.1.3",
  "_from": "modulex-promise@>=1.1.2 <2.0.0"
}
